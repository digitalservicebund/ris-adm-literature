name: Unpin backend libraries

on:
  push:
  workflow_dispatch:

jobs:
  test-unpinning-libraries:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle

      # - name: Where am I?
      #   run: |
      #     pwd
      #     tree -a .

      # the result is twofold:
      # 1. the libraries are unpinned in build.gradle.kts
      # 2. we have files that contain the CVE names and the library information
      # (cve_list.txt and pinned_deps.txta)
      - name: collect-and-comment-out-pinned-libraries
        run: ./.github/scripts/unpin-backend-libraries.sh

      # - name: New files?
      #   run: tree -a .
      - name: Confirm commenting in build.gradle.kts
        run: cat ./backend/build.gradle.kts
      - name: Confirm cve-list.txt
        run: cat cve-list.txt
      - name: Confirm pinned-deps.txt
        run: cat pinned-deps.txt

      - name: Build backend image
        working-directory: ./backend
        env:
          CONTAINER_REGISTRY: ghcr.io
          IMAGE_REF: ghcr.io/${{ github.repository }}-backend:${{ github.event.pull_request.head.sha || github.sha }}
        run: ./gradlew bootBuildImage

      - name: Run Trivy vulnerability image scanner
        # Note: This scan is NOT what is shown in the GitHub Security tab
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ghcr.io/${{ github.repository }}-backend:${{ github.event.pull_request.head.sha || github.sha }}
          format: "sarif"
          output: "trivy-image-results.sarif"
          exit-code: 0

      - name: Upload trivy results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-trivy-image-results.sarif
          retention-days: 3
          path: trivy-image-results.sarif
          if-no-files-found: error
      - name: Print trivy results (sarif format)
        run: cat trivy-image-results.sarif

      - name: Get CVE numbers from trivy
        run: jq -r '.runs[].tool.driver.rules[].id' trivy-image-results.sarif > trivy-cves.txt
      - name: Print trivy CVE numbers
        run: cat trivy-cves.txt

      - name: Pin libraries again which were reported by trivy. Remove those that are fine, now.
        run: ./.github/scripts/pin-libraries-again-reported-by-trivy.sh
      - name: Confirm cves-with-libraries.txt
        run: cat cves-with-libraries.txt
      - name: Confirm build.gradle.kts
        run: cat ./backend/build.gradle.kts

      - name: Apply spotless
        working-directory: ./backend
        run: ./gradlew spotlessApply
      - name: Confirm build.gradle.kts
        run: cat ./backend/build.gradle.kts

      - name: Build backend image again
        working-directory: ./backend
        env:
          CONTAINER_REGISTRY: ghcr.io
          IMAGE_REF: ghcr.io/${{ github.repository }}-backend:${{ github.event.pull_request.head.sha || github.sha }}
        run: ./gradlew bootBuildImage

      - name: Run Trivy vulnerability image scanner again
        # Note: This scan is NOT what is shown in the GitHub Security tab
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ghcr.io/${{ github.repository }}-backend:${{ github.event.pull_request.head.sha || github.sha }}
          format: "sarif"
          output: "trivy-image-results.sarif"
          exit-code: 1 # if any level of CVE is found, break the pipeline
      - name: Upload new trivy results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-trivy-image-results-2.sarif
          retention-days: 3
          path: trivy-image-results-2.sarif
          if-no-files-found: error
      - name: Print new trivy results (sarif format)
        run: cat trivy-image-results-2.sarif

      # TODO: commit new build.gradle.kts to main
      # TODO: skip steps if not needed
