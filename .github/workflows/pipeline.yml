name: "CI Pipeline"

on:
  push:
    branches: [main]
    paths-ignore:
      - "**/*.md"
  pull_request:
  # Allow to run this workflow manually
  workflow_dispatch:
    
# env:
# Setting the container information via the env key does not work we use outputs instead
# cf. the "setup-env-vars" job below for details

jobs:

  ###############
  # Workflow jobs
  ###############

  # Due to a GitHub bug (https://github.com/actions/runner/issues/480),
  # we need to set the env vars manually for our use case
  setup-env-vars:
    runs-on: ubuntu-latest
    outputs:
      GITHUB_RUN_ID: ${{ steps.set-env-vars.outputs.GITHUB_RUN_ID}}
      CONTAINER_REGISTRY: ${{ steps.set-env-vars.outputs.CONTAINER_REGISTRY}}
      CONTAINER_IMAGE_NAME: ${{ steps.set-env-vars.outputs.CONTAINER_IMAGE_NAME}}
      CONTAINER_IMAGE_VERSION: ${{ steps.set-env-vars.outputs.CONTAINER_IMAGE_VERSION}}
    steps:
      - name: Set docker image related environment variables
        id: set-env-vars
        run: |
          echo "GITHUB_RUN_ID=${{ github.run_id }}" >> $GITHUB_OUTPUT
          echo "CONTAINER_REGISTRY=ghr.io" >> $GITHUB_OUTPUT
          echo "CONTAINER_IMAGE_NAME=${{ github.repository }}" >> $GITHUB_OUTPUT
          echo "CONTAINER_IMAGE_VERSION=${{ github.event.pull_request.head.sha || github.sha }}" >> $GITHUB_OUTPUT
      - name: Show env vars
        run: echo $GITHUB_OUTPUT

  #################
  # Repository jobs
  #################

  security-jobs:
    uses: ./.github/workflows/security-jobs.yml
    secrets: inherit # so the backend workflow can access "secrets.SLACK_WEBHOOK_URL" and others
    permissions:
      contents: read
      security-events: write # trivy scan needs this


  ###############
  # Frontend jobs
  ###############

  frontend-checks:
    uses: ./.github/workflows/frontend-checks.yml
    secrets: inherit

  frontend-build-image-and-scan:
    uses: ./.github/workflows/frontend-build-image-and-scan.yml
    secrets: inherit
    needs:
      - setup-env-vars
    permissions:
      contents: read
      security-events: write
    with:
      run-id: ${{ needs.setup-env-vars.outputs.GITHUB_RUN_ID}}
      container-registry: ${{ needs.setup-env-vars.outputs.CONTAINER_REGISTRY}}
      container-image-name: ${{ needs.setup-env-vars.outputs.CONTAINER_IMAGE_NAME}}
      container-image-version: ${{ needs.setup-env-vars.outputs.CONTAINER_IMAGE_VERSION}}

  frontend-push-image-to-registry:
    if: ${{ github.ref == 'refs/heads/main' }}
    # For PR releases, labels could be used like this:
    # if: ${{ github.ref == 'refs/heads/main' || contains(github.event.pull_request.labels.*.name, 'dev-env') || contains(github.event.labeled.labels.*.name, 'dev-env') }}
    uses: ./.github/workflows/frontend-push-image-to-registry.yml
    secrets: inherit
    permissions:
      contents: read
      id-token: write # This is used to complete the identity challenge with sigstore/fulcio..
      packages: write
    needs:
      - setup-env-vars
      - security-jobs
      - frontend-checks
      - frontend-build-image-and-scan
    with:
      run-id: ${{ needs.setup-env-vars.outputs.GITHUB_RUN_ID}}
      container-registry: ${{ needs.setup-env-vars.outputs.CONTAINER_REGISTRY}}
      container-image-name: ${{ needs.setup-env-vars.outputs.CONTAINER_IMAGE_NAME}}
      container-image-version: ${{ needs.setup-env-vars.outputs.CONTAINER_IMAGE_VERSION}}

  frontend-deploy-staging:
    if: ${{ github.ref == 'refs/heads/main' }}
    uses: ./.github/workflows/frontend-deploy-staging.yml
    needs:
      - setup-env-vars
      - security-jobs
      - frontend-checks
      - frontend-build-image-and-scan
      - frontend-push-image-to-registry
    permissions:
      id-token: write
    secrets: inherit
    with:
      container-image-version: ${{ needs.setup-env-vars.outputs.CONTAINER_IMAGE_VERSION}}
