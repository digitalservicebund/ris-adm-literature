on:
  workflow_call:
    inputs:
      run-id:
        required: true
        type: string
      image-ref:
        required: true
        type: string
      container-registry:
        required: true
        type: string

jobs:
  backend-build-image-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
      - name: Build backend image
        working-directory: ./backend
        env:
          CONTAINER_REGISTRY: ${{ container-registry }}
          IMAGE_REF: ${{ imageRef }}
        run: ./gradlew bootBuildImage
      - name: Run Trivy vulnerability image scanner
        # Note: This scan is what is shown in the GitHub Security tab
        #       cf. step "Upload Trivy scan results to GitHub Security tab"
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ inputs.image-ref }}
          format: "sarif"
          output: "trivy-image-results.sarif"
      - name: Print trivy results (sarif format)
        run: cat trivy-image-results.sarif
      - name: Check trivy results
        run: |
          if grep -qE 'HIGH|CRITICAL' trivy-image-results.sarif; then
            echo "Vulnerabilities found"
            exit 1
          else
            echo "No significant vulnerabilities found"
            exit 0
          fi
      - name: Upload trivy results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-trivy-image-results.sarif
          retention-days: 3
          path: trivy-image-results.sarif
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ always() && github.ref == 'refs/heads/main' }} # Bypass non-zero exit code..
        with:
          sarif_file: "trivy-image-results.sarif"
      - name: Generate cosign vulnerability scan record
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@18f2510ee396bbf400402947b394f2dd8c87dbb0
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ inputs.image-ref }}
          format: "cosign-vuln"
          output: "cosign-vuln-backend.json"
      - name: Upload cosign vulnerability scan record
        uses: actions/upload-artifact@v4
        with:
          name: "cosign-vuln-backend.json"
          path: "cosign-vuln-backend.json"
          if-no-files-found: error
      - name: Save image
        run: |
          mkdir /tmp/images
          docker save -o /tmp/images/backend-image.tar ${{ inputs.image-ref }}
      - uses: actions/cache@v4
        with:
          path: /tmp/images
          key: docker-backend-images-cache-${{ inputs.run-id }}
          restore-keys: docker-backend-images-cache-${{ inputs.run-id }}
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
