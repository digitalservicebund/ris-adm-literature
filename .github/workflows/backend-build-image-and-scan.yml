on:
  workflow_call:
    inputs:
      run-id:
        required: true
        type: string
      image-ref:
        required: true
        type: string
      container-registry:
        required: true
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      GRADLE_ENCRYPTION_KEY:
        required: true

jobs:
  backend-build-image-and-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: "25.0"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Build backend image
        working-directory: ./backend
        env:
          CONTAINER_REGISTRY: ${{ inputs.container-registry }}
          IMAGE_REF: ${{ inputs.image-ref }}
        run: ./gradlew bootBuildImage

      - name: Run Trivy vulnerability image scanner
        # Note: Results are shown in the GitHub Security tab
        #       cf. step "Upload Trivy scan results to GitHub Security tab"
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ inputs.image-ref }}
          format: "sarif"
          output: "trivy-image-results.sarif"
          exit-code: 0

      - name: Upload trivy results as artifact
        uses: actions/upload-artifact@v5
        with:
          name: backend-trivy-image-results.sarif
          retention-days: 3
          path: trivy-image-results.sarif
          if-no-files-found: error

      - name: Upload Trivy scan results to GitHub Security tab (on `main`)
        uses: github/codeql-action/upload-sarif@v4
        # only on `main`
        if: ${{ github.ref == 'refs/heads/main' }} # Bypass non-zero exit code..
        with:
          sarif_file: "trivy-image-results.sarif"

      - name: Print trivy results (sarif format)
        run: cat trivy-image-results.sarif

      - name: Fail build on High/Criticial Vulnerabilities (on branches)
        # ignore on `main`
        if: ${{ github.ref != 'refs/heads/main' }}
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
          TRIVY_FORMAT: table
          TRIVY_SEVERITY: HIGH,CRITICAL
          TRIVY_EXIT_CODE: 1
        with:
          image-ref: ${{ inputs.image-ref }}
          # following three are ignored unfortunately -> therefore using ENV vars directly
          # https://github.com/aquasecurity/trivy-action/issues/435
          format: table
          severity: HIGH,CRITICAL
          exit-code: 1
          # On a subsequent call to the action we know trivy is already installed so can skip this
          skip-setup-trivy: true

      - name: Generate cosign vulnerability scan record
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          image-ref: ${{ inputs.image-ref }}
          format: "cosign-vuln"
          output: "backend-cosign-vuln.json"
          exit-code: 0
          # On a subsequent call to the action we know trivy is already installed so can skip this
          skip-setup-trivy: true

      - name: Upload cosign vulnerability scan record
        uses: actions/upload-artifact@v5
        with:
          name: "backend-cosign-vuln.json"
          path: "backend-cosign-vuln.json"
          if-no-files-found: error

      - name: Save image
        run: |
          mkdir /tmp/images
          docker save -o /tmp/images/backend-image.tar ${{ inputs.image-ref }}

      - uses: actions/cache@v4
        with:
          path: /tmp/images
          key: docker-backend-images-cache-${{ inputs.run-id }}
          restore-keys: docker-backend-images-cache-${{ inputs.run-id }}

      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
