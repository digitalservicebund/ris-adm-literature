on:
  workflow_call:

jobs:
  e2e-tests:
    strategy:
      matrix:
        playwright-project: ["chromium", "firefox", "webkit", "msedge"]
    runs-on: ubuntu-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.50.0-noble
    #   options: --user 1001
    steps:
      - uses: actions/checkout@v4
      # setup backend
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
      - name: Setup and validate Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b
      - name: Start backend
        working-directory: ./backend
        run: ./gradlew bootRun & # we'll wait for the backend to respond right before running the tests
      # setup frontend
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV
      - name: Cache browser binaries
        id: cache-browser-binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      # browsers that don't need "--with-deps"
      - name: Sanity Check
        run: |
          echo cache hit without curly braces? steps.cache-browser-binaries.outputs.cache-hit
          echo cache hit with curly braces? ${{ steps.cache-browser-binaries.outputs.cache-hit }}
      - name: Install Playwright Browser ${{ matrix.playwright-project }} (if not cached)
        if: ${{ matrix.playwright-project }} != 'webkit'
        working-directory: ./frontend
        run: npx playwright install ${{ matrix.playwright-project }}
      # browser (webkit) that needs "--with-deps"
      - name: Install Playwright Browser webkit
        if: ${{ matrix.playwright-project }} == 'webkit'
        working-directory: ./frontend
        run: npx playwright install --with-deps ${{ matrix.playwright-project }}
      - name: Wait for backend to serve the health Actuator (max 5min)
        timeout-minutes: 5
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health/readiness; do  
            echo "Waiting for backend to be fully up..."  
            sleep 0.1
          done
      - name: Run e2e tests (project ${{ matrix.playwright-project }})
        working-directory: ./frontend
        run: |
          npm run test:e2e -- --project ${{ matrix.playwright-project }}
      - name: Rename ${{ matrix.playwright-project }} test report blob
        working-directory: ./frontend
        run: mv frontend-e2e-test-report.blob frontend-e2e-test-report.blob.${{ matrix.playwright-project }}.zip
      - name: Upload e2e ${{ matrix.playwright-project }} test report blob
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.${{ matrix.playwright-project }}
          retention-days: 3
          path: frontend/frontend-e2e-test-report.blob.${{ matrix.playwright-project }}.zip
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
