on:
  workflow_call:

jobs:
  # Build the backend and frontend once
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
      - name: Build backend JAR
        working-directory: ./backend
        run: ./gradlew bootJar

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Upload backend JAR
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/build/libs/*.jar

      - name: Upload frontend dependencies
        uses: actions/upload-artifact@v4
        with:
          name: frontend-deps
          path: frontend/node_modules

  e2e-tests:
    needs: setup
    strategy:
      matrix:
        playwright-project:
          [
            { name: "chromium", install: "chromium" },
            { name: "firefox", install: "firefox" },
            { name: "webkit", install: "webkit", requiresInstallWithDeps: true },
            { name: "msedge", install: "msedge chromium" },
          ]
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.53.0-noble
    #  options: --user 1001

    steps:
      - uses: actions/checkout@v4

      # we need java to start the backend
      - name: Install Java (JRE)
        run: |
          apt-get update
          apt-get install -y openjdk-17-jre-headless --no-install-recommends

      - name: Download backend JAR
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
      - name: Download frontend dependencies
        uses: actions/download-artifact@v4
        with:
          name: frontend-deps
          path: frontend/node_modules

      - name: Start backend from JAR
        run: java -jar *.jar &

      - name: Wait for backend to serve the health Actuator (max 5min)
        timeout-minutes: 5
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health/readiness; do
            echo "Waiting for backend to be fully up..."
            sleep 0.1
          done
      - name: Run e2e tests (project ${{ matrix.playwright-project.name }})
        working-directory: ./frontend
        run: |
          npm run test:e2e -- --project ${{ matrix.playwright-project.name }}
      - name: Rename ${{ matrix.playwright-project.name }} test report blob
        working-directory: ./frontend
        run: mv frontend-e2e-test-report.blob frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}.zip
      - name: Upload e2e ${{ matrix.playwright-project.name }} test report blob
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}
          retention-days: 3
          path: frontend/frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}.zip
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
