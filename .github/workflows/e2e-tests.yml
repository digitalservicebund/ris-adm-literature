on:
  workflow_call:
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      GRADLE_ENCRYPTION_KEY:
        required: true

jobs:
  e2e-tests:
    strategy:
      fail-fast: false
      matrix:
        # Standard, sharded runs
        playwright-project:
          [
            { name: "chromium-adm", install: "chromium" },
            { name: "firefox-adm", install: "firefox" },
            { name: "msedge-adm", install: "msedge chromium" },
            { name: "chromium-uli", install: "chromium" },
            { name: "firefox-uli", install: "firefox" },
            { name: "msedge-uli", install: "msedge chromium" },
          ]
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]

        # Non-sharded login tests
        include:
          - playwright-project: { name: "loginChromium", install: "chromium" }
          - playwright-project: { name: "loginFirefox", install: "firefox" }
          - playwright-project: { name: "loginEdge", install: "msedge chromium" }

    runs-on: ubuntu-latest

    steps:
      - name: Disable man-db auto update (until fixed in Ubuntu) # we be fixed by 10.11.25 https://github.com/actions/runner-images/issues/13213
        run: |
          export DEBIAN_FRONTEND=noninteractive
          echo "set man-db/auto-update false" | sudo debconf-communicate
          sudo dpkg-reconfigure -f noninteractive man-db

      - uses: actions/checkout@v5
      # setup backend
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: "25.0"
          distribution: "temurin"

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Start backend
        working-directory: ./backend
        run: ./gradlew bootRun & # we'll wait for the backend to respond right before running the tests
      # setup frontend

      - name: Setup Node
        uses: actions/setup-node@v6
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV

      - name: Cache browser binaries
        id: cache-browser-binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      # browsers that don't need system packages (cf. matrix)
      # note that msedge still installs some
      - name: Install Playwright Browser
        if: ${{ ! matrix.playwright-project.requiresInstallWithDeps }}
        working-directory: ./frontend
        run: npx playwright install ${{ matrix.playwright-project.install }}

      - name: Wait for backend to serve the health Actuator (max 5min)
        timeout-minutes: 5
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health/readiness; do
            echo "Waiting for backend to be fully up..."
            sleep 0.5
          done

      - name: Run Playwright setup and seed data
        working-directory: ./frontend
        run: npx playwright test --project=setup --project="seed data"

      - name: Run e2e tests (project ${{ matrix.playwright-project.name }})
        working-directory: ./frontend
        run: |
          SHARD_ARG=""
          if [[ -n "${{ matrix.shardIndex }}" ]]; then
            SHARD_ARG="--shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}"
          fi
          npm run test:e2e -- --project ${{ matrix.playwright-project.name }} $SHARD_ARG

      - name: Rename ${{ matrix.playwright-project.name }} test report blob
        working-directory: ./frontend
        run: mv frontend-e2e-test-report.blob frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}.${{ matrix.shardIndex || 'full' }}.zip

      - name: Upload e2e ${{ matrix.playwright-project.name }} test report blob
        if: always()
        uses: actions/upload-artifact@v5
        with:
          name: frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}.${{ matrix.shardIndex || 'full' }}
          retention-days: 3
          path: frontend/frontend-e2e-test-report.blob.${{ matrix.playwright-project.name }}.${{ matrix.shardIndex || 'full' }}.zip

      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
