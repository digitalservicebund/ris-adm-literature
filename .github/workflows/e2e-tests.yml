on:
  workflow_call:

jobs:
  e2e-tests:
    strategy:
      fail-fast: false # Allows all matrix jobs to finish even if one fails
      matrix:
        project:
          # Regular, sharded tests
          - { name: "chromium", install: "chromium", shard: 1 }
          - { name: "chromium", install: "chromium", shard: 2 }
          - { name: "chromium", install: "chromium", shard: 3 }
          - { name: "chromium", install: "chromium", shard: 4 }
          - { name: "firefox", install: "firefox", shard: 1 }
          - { name: "firefox", install: "firefox", shard: 2 }
          - { name: "firefox", install: "firefox", shard: 3 }
          - { name: "firefox", install: "firefox", shard: 4 }
          - { name: "msedge", install: "msedge chromium", shard: 1 }
          - { name: "msedge", install: "msedge chromium", shard: 2 }
          - { name: "msedge", install: "msedge chromium", shard: 3 }
          - { name: "msedge", install: "msedge chromium", shard: 4 }
          # Login tests (no shard property)
          - { name: "loginChromium" }
          - { name: "loginFirefox" }
          - { name: "loginEdge" }

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: |
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Setup and validate Gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96
      - name: Start backend
        working-directory: ./backend
        run: ./gradlew bootRun & # we'll wait for the backend to respond right before running the tests
      # setup frontend
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV
      - name: Cache browser binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      # browsers that don't need system packages (cf. matrix)
      # note that msedge still installs some
      - name: Install Playwright Browser
        if: ${{ ! matrix.playwright-project.requiresInstallWithDeps }}
        working-directory: ./frontend
        run: npx playwright install ${{ matrix.playwright-project.install }}
      - name: Install Chromium for Setup
        working-directory: ./frontend
        run: npx playwright install chromium
      - name: Wait for backend to serve the health Actuator (max 5min)
        timeout-minutes: 5
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health/readiness; do
            echo "Waiting for backend to be fully up..."
            sleep 0.5
          done
      - name: Run Playwright setup and seed data
        working-directory: ./frontend
        run: npx playwright test --project=setup --project="seed data"
      - name: Run e2e tests (project ${{ matrix.playwright-project.name }})
        working-directory: ./frontend
        run: |
          SHARD_ARG=""
          if [[ -n "${{ matrix.project.shard }}" ]]; then
            SHARD_ARG="--shard=${{ matrix.project.shard }}/4"
          fi
          npm run test:e2e -- --project ${{ matrix.project.name }} $SHARD_ARG
      - name: Upload e2e test report blob
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report-${{ matrix.project.name }}-${{ matrix.project.shard || 'full' }}
          retention-days: 3
          path: frontend/frontend-e2e-test-report.blob

      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
