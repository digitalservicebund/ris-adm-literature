on:
  workflow_call:

jobs:
  linting-formatting-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Linting
        run: npm run lint:check
        working-directory: ./frontend
      - name: Formatting
        run: npm run format:check
        working-directory: ./frontend
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Build
        run: npm run build
        working-directory: ./frontend
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  unit-tests-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/package.json
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Unit tests
        run: |
          npm run test:unit
        working-directory: ./frontend
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #
      #
# Disabled as these got stuck somehow
#
# e2e-tests-frontend:
#   runs-on: ubuntu-latest
#   steps:
#     - uses: actions/checkout@v4
#     - name: Setup Node
#       uses: actions/setup-node@v4
#       with:
#         node-version-file: ./frontend/package.json
#         cache: npm
#         cache-dependency-path: ./frontend/package-lock.json
#     - name: Cache node_modules
#       uses: actions/cache@v4
#       id: node-modules-cache
#       with:
#         path: |
#           ./frontend/node_modules
#         key: modules-${{ hashFiles('./frontend/package-lock.json') }}
#     - name: Install dependencies
#       if: steps.node-modules-cache.outputs.cache-hit != 'true'
#       run: |
#         npm ci
#       working-directory: ./frontend
#     - name: Get Playwright version
#       working-directory: ./frontend
#       run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV
#     - name: Cache browser binaries
#       id: cache-browser-binaries
#       uses: actions/cache@v4
#       with:
#         path: ~/.cache/ms-playwright
#         key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
#     - name: Install playwright browsers
#       if: steps.cache-browser-binaries.outputs.cache-hit != 'true'
#       run: |
#         npx --yes playwright install --with-deps
#     - name: e2e tests
#       run: |
#         npm run test:e2e
#       working-directory: ./frontend
#     # TODO: enable later
#     #
#     # - name: Send status to Slack
#     #   # Third-party action, pin to commit SHA!
#     #   # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
#     #   uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
#     #   if: ${{ failure() && github.ref == 'refs/heads/main' }}
#     #   with:
#     #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
#
#

#TODO sonar analysis
