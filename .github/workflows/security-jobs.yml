on:
  workflow_call:

jobs:
  confirm-repository-secret-scanning-with-push-protection:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt install jq
      - name: Fetch configuration information on repository
        env:
          # the token needs (max) the following permissions:
          # read:enterprise, read:org, read:project, read:user, repo
          GH_TOKEN: ${{ secrets.GH_SECRET_SCANNING_TOKEN }}
        run: gh api --method GET -H "X-GitHub-Api-Version:2022-11-28"  /repos/digitalservicebund/ris-adm-vwv > repo-info.json
      - name: Confirm that secret scanning is active
        run: |
          if [[ $(cat repo-info.json | jq ' .security_and_analysis.secret_scanning.status') == *enabled* ]]; then 
            exit 0; 
          else 
            exit 1
          fi
      - name: Confirm that push protection is active
        run: |
          if [[ $(cat repo-info.json | jq ' .security_and_analysis.secret_scanning_push_protection.status') == *enabled* ]]; then 
            exit 0; 
          else 
            exit 1
          fi
      - name: On failure send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  repository-filesystem-scan-with-trivy:
    # Note: Results are shown in the GitHub Security tab
    #       cf. step "Upload Trivy scan results to GitHub Security tab"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # The first call to the action will invoke setup-trivy and install trivy
      # open source security scanner, cf. https://trivy.dev/
      - name: Run Trivy vulnerability scanner in fs (file-system) mode
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          scan-type: "fs"
          format: "sarif"
          output: "trivy-fs-results.sarif"
          scan-ref: .
          exit-code: 0

      - name: Upload trivy fs scan sarif report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-results.sarif
          retention-days: 3
          path: trivy-fs-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        # only on main
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-fs-results.sarif"

      - name: Print trivy fs results
        run: cat trivy-fs-results.sarif

      - name: Fail build on High/Criticial Vulnerabilities
        # ignore on main
        if: ${{ github.ref != 'refs/heads/main' }} 
        uses: aquasecurity/trivy-action@76071ef0d7ec797419534a183b498b4d6366cf37
        env:
          TRIVY_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ghcr.io/aquasecurity/trivy-java-db,public.ecr.aws/aquasecurity/trivy-java-db
        with:
          scan-type: "fs"
          format: table
          scan-ref: .
          severity: HIGH,CRITICAL
          exit-code: 1
          # On a subsequent call to the action we know trivy is already installed so can skip this
          skip-setup-trivy: true

      - name: On failure send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
