on:
  workflow_call:

jobs:
  lint-and-format-check-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Lint check
        run: npm run lint:check
        working-directory: ./frontend
      - name: Format check
        run: npm run format:check
        working-directory: ./frontend
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Build
        run: npm run build
        working-directory: ./frontend
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  unit-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Unit tests
        run: |
          npm run test:unit
        working-directory: ./frontend
      - name: Upload unit test JSON report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-unit-test-report.json
          retention-days: 3
          path: frontend/frontend-unit-test-report.json
      - name: Upload unit test HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-unit-test-report-html
          retention-days: 3
          path: frontend/html
          if-no-files-found: warn
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  e2e-test-frontend:
    strategy:
      matrix:
        playwright-projects: ["chromium", "firefox", "webkit", "msedge"]
    runs-on: ubuntu-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.50.0-noble
    #   options: --user 1001
    steps:
      - uses: actions/checkout@v4
      # setup backend
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
      - name: Setup and validate Gradle
        uses: gradle/actions/setup-gradle@94baf225fe0a508e581a564467443d0e2379123b
      - name: Start backend
        working-directory: ./backend
        run: ./gradlew bootRun & # we'll wait for the backend to respond right before running the tests
      # setup frontend
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache node_modules
        uses: actions/cache@v4
        id: node-modules-cache
        with:
          path: |
            ./frontend/node_modules
          key: modules-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install dependencies
        if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          npm ci
        working-directory: ./frontend
      - name: Get Playwright version
        working-directory: ./frontend
        run: echo "PLAYWRIGHT_VERSION=$(jq -r '.packages["node_modules/@playwright/test"].version' package-lock.json)" >> $GITHUB_ENV
      - name: Cache browser binaries
        id: cache-browser-binaries
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        working-directory: ./frontend
        run: npx playwright install --with-deps ${{ matrix.playwright-projects }}
      - name: Wait for backend to serve the health Actuator (max 5min)
        timeout-minutes: 5
        run: |
          until curl --output /dev/null --silent --head --fail http://localhost:8080/actuator/health/readiness; do  
            echo "Waiting for backend to be fully up..."  
            sleep 0.1
          done
      - name: Run e2e tests (project ${{ matrix.playwright-projects }})
        working-directory: ./frontend
        run: |
          npm run test:e2e -- --project ${{ matrix.playwright-projects }}
      # - name: Upload e2e JSON test report
      #   if: always()
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: frontend-e2e-test-report.json
      #     retention-days: 3
      #     path: frontend/frontend-e2e-test-report.json
      - name: Upload e2e HTML test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.${{ matrix.playwright-projects }}
          retention-days: 3
          path: frontend/frontend-e2e-test-report.blob
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  compile-e2e-HTML-report:
    needs:
      - e2e-test-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download e2e chromium test report blob
        uses: actions/download-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.chromium
          path: tmp/e2e-test-report/frontend-e2e-test-report.blob.chromium
      - name: Download e2e firefox test report blob
        uses: actions/download-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.firefox
          path: tmp/e2e-test-report/frontend-e2e-test-report.blob.firefox
      - name: Download e2e webkit test report blob
        uses: actions/download-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.webkit
          path: tmp/e2e-test-report/frontend-e2e-test-report.blob.webkit
      - name: Download e2e msedge test report blob
        uses: actions/download-artifact@v4
        with:
          name: frontend-e2e-test-report.blob.msedge
          path: tmp/e2e-test-report/frontend-e2e-test-report.blob.msedge
      - name: Filetree
        run: tree ./
      - name: Generate HTML report out of all the blobs
        working-directory: ./frontend
        run: |
          npm ci
          npx playwright merge-reports --reporter html ../tmp/e2e-test-report/
      - name: Upload e2e HTML test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tmp/e2e-test-report/frontend-e2e-test-report.blob
          retention-days: 3
          path: frontend/tmp/e2e-test-report

  code-quality-check-with-sonarqube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Run coverage
        run: npm run test:coverage
        working-directory: ./frontend
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@0303d6b62e310685c0e34d0b9cde218036885c4d
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        with:
          projectBaseDir: ./frontend
          args: >
            -Dsonar.qualitygate.wait=true
      - name: Send status to Slack
        # Third-party action, pin to commit SHA!
        # See https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  license-audit-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: ./frontend/.node-version
          cache: npm
          cache-dependency-path: ./frontend/package-lock.json
      - name: Cache npm cache
        uses: actions/cache@v4
        id: cache-npm-cache
        with:
          # The docs discourage caching `node-modules`, cf. https://github.com/actions/cache/blob/main/examples.md#node---npm
          path: /home/runner/.npm
          key: npm-cache-${{ hashFiles('./frontend/package-lock.json') }}
      - name: Install node modules
        run: npm ci
        working-directory: ./frontend
      - name: Run license scanner
        run: npm run audit:licences
        working-directory: ./frontend
      - name: Upload licence report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: frontend-license-report
          retention-days: 3
          path: frontend/frontend-licence-report.csv
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
