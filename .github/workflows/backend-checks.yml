on:
  workflow_call:

jobs:
  check-formatting-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
      # NodeJS is used by prettier, which formats kotlin in spotless
      # Using the latest LTS should work
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version-file: ./backend/.node-version
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: | # optional
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Run spotlessCheck
        working-directory: ./backend
        run: ./gradlew spotlessCheck
      - name: On failure send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  check-style-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: | # optional
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Run checkstyleMain
        working-directory: ./backend
        run: ./gradlew checkstyleMain
      - name: Run checkstyleTest
        working-directory: ./backend
        run: ./gradlew checkstyleTest
      - name: On failure send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # test-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "23.0"
  #         distribution: "temurin"
  #         cache: gradle
  #     - name: Run tests
  #       run: ./gradlew test
  #       working-directory: ./backend
  #     - name: Upload test report artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: backend-test-report
  #         path: backend/build/reports/tests/test
  #         if-no-files-found: warn
  #     - name: On failure send status to Slack
  #       # only on failure and if on "main" branch
  #       if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #       uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
  #       with:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # build-backend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         java-version: "23.0"
  #         distribution: "temurin"
  #         cache: gradle
  #     - name: Build backend
  #       run: ./gradlew build --profile -x test -x spotlessCheck -x checkstyleMain -x checkstyleTest
  #       working-directory: ./backend
  #     - name: Upload build performance report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: backend-build-performance-report
  #         path: backend/build/reports/profile/profile*.html
  #     - name: On failure send status to Slack
  #       # only on failure and if on "main" branch
  #       if: ${{ failure() && github.ref == 'refs/heads/main' }}
  #       uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
  #       with:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  build-test-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: | # optional
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
      - name: Build, test, sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
        working-directory: ./backend
        run: ./gradlew build test --profile sonar --info -x checkstyleMain -x checkstyleTest
      - name: Check SonarQube Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@df914238f99aa5d81f4490aeea80f205c7ed9600
        with:
          scanMetadataReportFile: backend/build/sonar/report-task.txt
        timeout-minutes: 3 # Force to fail step after specific time
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_BACKEND }}
      #
      # Upload reports as pipeline artifacts
      #
      - name: Upload build performance report
        uses: actions/upload-artifact@v4
        with:
          name: backend-build-performance-report
          path: backend/build/reports/profile/profile*.html
      - name: Upload test report artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-report
          path: backend/build/reports/tests/test
          if-no-files-found: warn
      #
      # Let the team know on failure on `main`
      #
      - name: On failure send status to Slack
        # only on failure and if on "main" branch
        if: ${{ failure() && github.ref == 'refs/heads/main' }}
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  check-licenses:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: | # optional
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Check licenses
        working-directory: ./backend
        run: ./gradlew checkLicense
      - name: Upload licence report
        uses: actions/upload-artifact@v4
        with:
          name: backend-license-report
          retention-days: 3
          path: ./backend/build/reports/dependency-license/index.html
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main'}}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  generate-backend-code-documentation:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "23.0"
          distribution: "temurin"
          cache: gradle
          cache-dependency-path: | # optional
            backend/*.gradle*
            backend/**/gradle-wrapper.properties
      - name: Generate javadocs
        working-directory: ./backend
        run: ./gradlew javadoc
      - name: Upload javadocs
        uses: actions/upload-artifact@v4
        with:
          name: backend-code-documentation
          retention-days: 3
          path: backend/build/docs/javadoc/
      - name: Send status to Slack
        uses: digitalservicebund/notify-on-failure-gha@814d0c4b2ad6a3443e89c991f8657b10126510bf # v1.5.0
        if: ${{ failure() && github.ref == 'refs/heads/main'}}
        with:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
